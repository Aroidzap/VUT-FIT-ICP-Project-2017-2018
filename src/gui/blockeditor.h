/**
 * @file blockeditor.h
 * @brief UI Class for main window
 * @details Header contains declarations generated by Qt Designer (actual file is generated during compilation)
 *          and some handwritten declarations for other actions
 * @author Tomáš Pazdiora
 * @author Michal Pospíšil
 */

#ifndef BLOCKEDITOR_H
#define BLOCKEDITOR_H

#include <QMainWindow>

QT_BEGIN_NAMESPACE
class QAction;
class QMenu;
QT_END_NAMESPACE

namespace Ui {
class BLOCKEDITOR;
}

class BLOCKEDITOR : public QMainWindow
{
    Q_OBJECT

public:
	explicit BLOCKEDITOR(QWidget *parent = 0);
	~BLOCKEDITOR();

protected:
    void closeEvent(QCloseEvent *event) Q_DECL_OVERRIDE;

private slots:
    void open();
    bool save();
    bool saveAs();
    void help();
    void about();
    void documentWasModified();

private:
	Ui::BLOCKEDITOR *ui;

    void createActions();
    void createMenus();
    void createToolBars();
    bool maybeSave();
    void loadFile(const QString &fileName);
    bool saveFile(const QString &fileName);
    void setCurrentFile(const QString &fileName);

    QString curFile;

    QMenu *fileMenu;
    QMenu *helpMenu;
    QToolBar *fileToolBar;
    QToolBar *actionToolBar;
    QToolBar *helpToolBar;
    QAction *openAct;
    QAction *saveAct;
    QAction *saveAsAct;
    QAction *exitAct;
    QAction *computeAct;
    QAction *stepAct;
    QAction *resetAct;
    QAction *helpAct;
    QAction *aboutAct;
};

#endif // BLOCKEDITOR_H
